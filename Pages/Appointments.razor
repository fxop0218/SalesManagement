@page "/Appointments"

@inject IAppointmentService AppointmentService

<h3>Appointments</h3>

@code {

}
@using Syncfusion.Blazor.Schedule

<div class="col-lg-12 control-section">
    <SfSchedule TValue="AppointmentModel" Width="100%" Height="650px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView" @ref="SfS">
        <ScheduleEvents TValue="AppointmentModel"
            OnActionBegin="OnActionBeginAsync" ActionCompleted="OnActionCompletedAsync"></ScheduleEvents>
        <ScheduleEventSettings DataSource="@AppointmentsData"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>
@code {

    private SfSchedule<AppointmentModel> SfS { get; set; }
    private List<AppointmentModel> AppointmentsData { get; set; }
    public View CurrentView { get; set; } = View.Week;
    private int CurrentYear;
    private DateTime CurrentDate { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CurrentYear = DateTime.Today.Year;
        CurrentDate = DateTime.Now;
        AppointmentsData = await AppointmentService.GetAppointments();
    }

    public async Task OnActionBeginAsync(Syncfusion.Blazor.Schedule.ActionEventArgs<AppointmentModel> arguments)
    {
        if (arguments.ActionType == ActionType.EventCreate)
        {
            AppointmentModel data = arguments.AddedRecords[0];
            await AppointmentService.AddAppointment(data);
        }
        else if(arguments.ActionType == ActionType.EventChange)
        {
            AppointmentModel data = arguments.ChangedRecords[0];
            await AppointmentService.UpdateAppointment(data);
        }
    }

    public async Task OnActionCompletedAsync(Syncfusion.Blazor.Schedule.ActionEventArgs<AppointmentModel> arguments)
    {
        if (arguments.ActionType == ActionType.EventCreate)
        {
            AppointmentsData = await AppointmentService.GetAppointments();
            await SfS.RefreshEventsAsync();
        }
    }
}
